[{"path":"https://ekholme.github.io/crossfitgames/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 crossfitgames authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ekholme.github.io/crossfitgames/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eric Ekholm. Author, maintainer.","code":""},{"path":"https://ekholme.github.io/crossfitgames/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ekholm E (2023). crossfitgames: Tools accessing shaping data Crossfit Games API. https://github.com/ekholme/crossfitgames, https://ekholme.github.io/crossfitgames/.","code":"@Manual{,   title = {crossfitgames: Tools for accessing and shaping data from the Crossfit Games API},   author = {Eric Ekholm},   year = {2023},   note = {https://github.com/ekholme/crossfitgames, https://ekholme.github.io/crossfitgames/}, }"},{"path":"https://ekholme.github.io/crossfitgames/index.html","id":"crossfitgames","dir":"","previous_headings":"","what":"Tools for accessing and shaping data from the Crossfit Games API","title":"Tools for accessing and shaping data from the Crossfit Games API","text":"crossfitgames provides high-level functionality retrieving data Crossfit Games API. ’s still work--progress, basic functionality get data Games. ’ll ge adding functionality retrieve data competitions well functions manipulate data request results. loosely inspired Davis Vaughan’s {crossfit} package, also provides functionality retrieving data Crossfit API.","code":""},{"path":"https://ekholme.github.io/crossfitgames/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for accessing and shaping data from the Crossfit Games API","text":"can install development version crossfitgames github :","code":"# install.packages(\"devtools\") devtools::install_github(\"ekholme/crossfitgames\")"},{"path":"https://ekholme.github.io/crossfitgames/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tools for accessing and shaping data from the Crossfit Games API","text":"might want get final results Crossfit games given year. example, can get data 2022 games women’s division via games_leaderboard() function. return cfg_leaderboard S3 object. can use methods associated object extract usable data:","code":"library(crossfitgames) #> Warning: replacing previous import 'tibble::data_frame' by 'vctrs::data_frame' #> when loading 'crossfitgames'  women_22 <- games_leaderboard(2022, \"women\") # will get the final leaderboard final_lb <- extract_final_leaderboard(women_22)  head(final_lb) #> # A tibble: 6 × 3 #>    rank athlete          score #>   <dbl> <chr>            <dbl> #> 1     1 Tia-Clair Toomey  1158 #> 2     2 Mallory O'Brien   1045 #> 3     3 Laura Horvath      981 #> 4     4 Danielle Brandon   937 #> 5     5 Brooke Wells       904 #> 6     6 Emma Lawson        893 # will get event results for each athlete event_results <- extract_workout_results(women_22)  head(event_results) #> # A tibble: 6 × 5 #>   athlete          workout_num workout_place points score    #>   <chr>                  <int>         <dbl>  <dbl> <chr>    #> 1 Tia-Clair Toomey           1             2     97 38:26.64 #> 2 Tia-Clair Toomey           2             2     97 07:08.14 #> 3 Tia-Clair Toomey           3             1    100 18 rep   #> 4 Tia-Clair Toomey           4            23     36 23 pt    #> 5 Tia-Clair Toomey           5             9     76 11:22.64 #> 6 Tia-Clair Toomey           6             3     94 35:11.29"},{"path":"https://ekholme.github.io/crossfitgames/reference/cfg-request.html","id":null,"dir":"Reference","previous_headings":"","what":"Core Make Request Function — cfg-request","title":"Core Make Request Function — cfg-request","text":"mostly meant internal function, although cases users may want call directly","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/cfg-request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Core Make Request Function — cfg-request","text":"","code":"make_cfg_request(competition, year, page = 1, ...)  multi_page_cfg_request(competition, year, n_pages, ...)"},{"path":"https://ekholme.github.io/crossfitgames/reference/cfg-request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Core Make Request Function — cfg-request","text":"competition length-one character vector indicating competition query year length-one integer vector indicating year query page length-one integer vectory indicating page query. Useful getting data open quarterfinals 50 competitors. ... Additional parameters passed URL query string","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/crossfitgames-package.html","id":null,"dir":"Reference","previous_headings":"","what":"crossfitgames: Tools for accessing and shaping data from the Crossfit Games API — crossfitgames-package","title":"crossfitgames: Tools for accessing and shaping data from the Crossfit Games API — crossfitgames-package","text":"crossfitgames provides high- low-level functions retrieve data Crossfit Games API well helper functions extracting rectangling retrieved data.","code":""},{"path":[]},{"path":"https://ekholme.github.io/crossfitgames/reference/crossfitgames-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"crossfitgames: Tools for accessing and shaping data from the Crossfit Games API — crossfitgames-package","text":"Maintainer: Eric Ekholm eric.ekholm@gmail.com","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/extract_final_leaderboard.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Final Leaderboard — extract_final_leaderboard.cfg_leaderboard","title":"Extract Final Leaderboard — extract_final_leaderboard.cfg_leaderboard","text":"Extract final leaderboard","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/extract_final_leaderboard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Final Leaderboard — extract_final_leaderboard.cfg_leaderboard","text":"","code":"# S3 method for cfg_leaderboard extract_final_leaderboard(obj)  extract_final_leaderboard(x)"},{"path":"https://ekholme.github.io/crossfitgames/reference/extract_final_leaderboard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Final Leaderboard — extract_final_leaderboard.cfg_leaderboard","text":"obj cfg_leaderboard object","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/extract_final_leaderboard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Final Leaderboard — extract_final_leaderboard.cfg_leaderboard","text":"3-column tibble rank, name, total points competitors","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/extract_final_leaderboard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Final Leaderboard — extract_final_leaderboard.cfg_leaderboard","text":"","code":"if (FALSE) { women_22 <- games_leaderboard(2022, \"women\")  lb <- extract_final_leaderboard(women_22) }"},{"path":"https://ekholme.github.io/crossfitgames/reference/extract_workout_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Workout Results — extract_workout_results.cfg_leaderboard","title":"Extract Workout Results — extract_workout_results.cfg_leaderboard","text":"Extract individual workout results cfg_leaderboard object","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/extract_workout_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Workout Results — extract_workout_results.cfg_leaderboard","text":"","code":"# S3 method for cfg_leaderboard extract_workout_results(obj)  extract_workout_results(x)"},{"path":"https://ekholme.github.io/crossfitgames/reference/extract_workout_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Workout Results — extract_workout_results.cfg_leaderboard","text":"obj cfg_leaderboard object","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/extract_workout_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Workout Results — extract_workout_results.cfg_leaderboard","text":"5-column tibble including athlete Athlete name workout_num Workout number workout_place Finishing position athlete workout points Number points earned workout score Recorded score workout time, weight, reps, etc","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/extract_workout_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Workout Results — extract_workout_results.cfg_leaderboard","text":"","code":"if (FALSE) { women_22 <- games_leaderboard(2022, \"women\")  indiv_results <- extract_workout_results(women_22) }"},{"path":"https://ekholme.github.io/crossfitgames/reference/games_leaderboard.html","id":null,"dir":"Reference","previous_headings":"","what":"Games Leaderboard — games_leaderboard","title":"Games Leaderboard — games_leaderboard","text":"Retrive Crossfit Games leaderboard Crossfit API. Functions process data TODO","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/games_leaderboard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Games Leaderboard — games_leaderboard","text":"","code":"games_leaderboard(year, division = c(\"men\", \"women\", \"teams\"), ...)"},{"path":"https://ekholme.github.io/crossfitgames/reference/games_leaderboard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Games Leaderboard — games_leaderboard","text":"year year request data , integer division competition division request data . Currently supports \"men\", \"women\", \"teams\" ... Additional request parameters passed API. currently used.","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/games_leaderboard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Games Leaderboard — games_leaderboard","text":"cfg_leaderboard object","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/games_leaderboard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Games Leaderboard — games_leaderboard","text":"","code":"if (FALSE) { men_22 <- games_leaderboard(2022, division = \"men\") }"},{"path":"https://ekholme.github.io/crossfitgames/reference/lookup_athlete_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup Athlete ID — lookup_athlete_id","title":"Lookup Athlete ID — lookup_athlete_id","text":"Utility function look potential athlete ID numbers (identifying info). function useful helping identify id number athlete interested , can (optionally) passed open_leaderboard function get Crossfit Open results specific athlete","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/lookup_athlete_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup Athlete ID — lookup_athlete_id","text":"","code":"lookup_athlete_id(name, year, division = c(\"men\", \"women\", \"teams\"))"},{"path":"https://ekholme.github.io/crossfitgames/reference/lookup_athlete_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup Athlete ID — lookup_athlete_id","text":"name Name athlete search year Year open competition search division Division look . Currently accepts 'men', 'women', 'teams'","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/lookup_athlete_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup Athlete ID — lookup_athlete_id","text":"list information athletes matching 'name' parameter.","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/lookup_athlete_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lookup Athlete ID — lookup_athlete_id","text":"","code":"if (FALSE) { #can pass just a last name res <- lookup_athlete_id(\"toomey\", 2022, \"women\")  #or you can pass a full name res2 <- lookup_athlete_id(\"laura horvath\", 2022, \"women\")  }"},{"path":"https://ekholme.github.io/crossfitgames/reference/lookups.html","id":null,"dir":"Reference","previous_headings":"","what":"Constants to help build queries — lookups","title":"Constants to help build queries — lookups","text":"subset (probably) useful constants use help build queries. Note exhaustive list, API well-documented, straightforward get everything. cfg_competitions: values accepted competition parameters. cfg_divisions: values accepted division parameters. Note currently include teen, masters, adaptive competitions. cfg_scaled: values accepted scaled parameters. cfg_semis: semi-final competitions. Currently includes semifinal competitions 2022 season. cfg_regions: values accepted region parameters.","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/lookups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constants to help build queries — lookups","text":"","code":"cfg_competitions  cfg_divisions  cfg_scaled  cfg_semis  cfg_regions"},{"path":"https://ekholme.github.io/crossfitgames/reference/lookups.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Constants to help build queries — lookups","text":"object class list length 4. object class list length 3. object class list length 3. object class list length 11. object class list length 7.","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/open_leaderboard.html","id":null,"dir":"Reference","previous_headings":"","what":"Open Leaderboard — open_leaderboard","title":"Open Leaderboard — open_leaderboard","text":"Retrieve Crossfit Open leaderboard Crossfit API. Functions process data TODO","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/open_leaderboard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open Leaderboard — open_leaderboard","text":"","code":"open_leaderboard(   year,   division = c(\"men\", \"women\", \"teams\"),   athlete = NULL,   top_n = 50,   ... )"},{"path":"https://ekholme.github.io/crossfitgames/reference/open_leaderboard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open Leaderboard — open_leaderboard","text":"year year request data , integer division competition division request data . Currently supports \"men\", \"women\", \"teams\" athlete Optional parameter. NULL, unique ID number athlete. provided, return results (list) athlete. See lookup_athlete_id function help determine athlete's id. ... Additional request parameters passed API. might include region, scaling status (.e. workouts completed Rx scaled).","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/open_leaderboard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open Leaderboard — open_leaderboard","text":"cfg_leaderboard object athlete NULL. athlete NULL, list.","code":""},{"path":"https://ekholme.github.io/crossfitgames/reference/open_leaderboard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open Leaderboard — open_leaderboard","text":"","code":"if (FALSE) { # will return the top 50 athletes men_22 <- open_leaderboard(2022, division = \"men\")  north_am_women <- open_leaderboard(2022, division = \"women\", region = 31)  # the default is to return the top 50 finishers; if you want more than that, you can specify the number top_200_w <- open_leaderboard(2022, division = \"women\", top_n = 200)  # specifying an individual athlete with an id number # the number provided corresponds to laura horvath # note that this returns a list lh <- 591912 lh_open <- open_leaderboard(2022, division = \"women\", athlete = lh) }"}]
